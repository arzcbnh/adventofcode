#!/bin/env sh

# Usage:
#	./run [OPTION...] FILE

CC="cc"
CCARGS="-g -std=c99 -pedantic -W -Wall -Werror"
INPUT="input"
VALGRIND=false

while getopts ":gstv" arg; do
	case "$arg" in
		g) CC="gcc" ;;
		s) CCARGS="-g" ;; # Simple compilation, disables pedantic
		t) INPUT="test" ;; # Use test file as input
		v) VALGRIND=true ;;
		*) ;;
	esac
done

PROGRAM=$(eval echo "\$$OPTIND")

if ! echo "$PROGRAM" | grep -q -E '\.c'; then
	echo "Error: missing program"
	exit 1
fi

eval "$CC $CCARGS $PROGRAM strmanip.c memmanage.c -lm" && ./a.out < "$INPUT" && {
	if "$VALGRIND"; then
		head -n 1 > /dev/null
		valgrind -s --leak-check=full --track-origins=yes ./a.out < "$INPUT"
	fi
}

# --max-stackframe=10000000 
